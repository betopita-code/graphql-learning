enum Roles {
  ADMIN
  USER
}

type user {
  updatedAt: DateTime
  id: ID
  name: String
  email: String
  pw_login: String
  role: Roles
  status: Boolean
}

type userResponse {
  ok: Boolean
  message: String
  user: [user]
  data: JSON
}

input userCreate {
  name: String!
  email: String!
  pw_login: String!
  role: Roles!
}

input userUpdate {
  name: String
  email: String
  pw_login: String
  role: Roles
}

extend type Query {
  readUser(id: ID, name: String): [userResponse]
  readUsers(since: Int, limit: Int): [userResponse]
}

extend type Mutation {
  createUser(input: userCreate!): [userResponse]
  updateUser(id: ID!, input: userUpdate!): [userResponse]
  destroyUser(id: ID!): [userResponse]
}

extend type Subscription {
  newUser: user!
}
