enum Roles {
    ADMIN
    USER
}

type User {
    id: ID
    name: String
    email: String
    pw_login: String
    role: Roles
    status: Boolean
}

input UserInput {
    name: String!
    email: String!
    pw_login: String
    role: Roles!
}

extend type Query {
    getUsers(since: Int, limit: Int): [User]
    getUser(id: ID): User
}

extend type Mutation {
    createUser(input: UserInput!): Response
    updateUser(id: ID!, input: UserInput!): Response
    deleteUser(id: ID!): Response
}

extend type Subscription {
    newUser: User!
}
